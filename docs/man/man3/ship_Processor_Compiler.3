.TH "ship.Processor.Compiler" 3 "Ship Processor" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ship.Processor.Compiler
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAssembler\fP"
.br
.ti -1c
.RI "class \fBParser\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBArgumentType\fP : ushort { \fBIHaveNoFuckingClue\fP = 0xff, \fBRegister\fP = 0x0, \fBRegisterPointer\fP = 0x8, \fBRegisterNextWordPointer\fP = 0x10, \fBStackManip\fP = 0x18, \fBStackPeek\fP = 0x19, \fBStackPick\fP = 0x1A, \fBStackPointer\fP = 0x1b, \fBProgramCounter\fP = 0x1c, \fBExcessRegister\fP = 0x1d, \fBNextWordPointer\fP = 0x1e, \fBNextWord\fP = 0x1f }"
.br
.ti -1c
.RI "enum \fBRegister\fP : ushort { \fBA\fP = 0x0, \fBB\fP = 0x1, \fBC\fP = 0x2, \fBX\fP = 0x3, \fBY\fP = 0x4, \fBZ\fP = 0x5, \fBI\fP = 0x6, \fBJ\fP = 0x7 }"
.br
.RI "MAKE SURE TO SUBSTRACT 1!!!!!!! "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "record \fBOperationDecl\fP (int LineNumber)"
.br
.ti -1c
.RI "record InstructionDecl(int LineNumber, OpcodeDecl Decl, ArgumentDecl[] ArgDecls) record LabelDecl(int LineNumber, string LabelName, ushort? Position) record \fBOpcodeDecl\fP (string Name, bool Special, int ArgCount, int Id)"
.br
.ti -1c
.RI "record \fBArgumentDecl\fP (ArgumentType Type, \fBRegister\fP? \fBRegister\fP, int ArgumentIndex, ushort? ImmediateValue, string? LabelID)"
.br
.ti -1c
.RI "record \fBPlusNextWordArg\fP (ushort? value, string? label, \fBRegister\fP? reg)"
.br
.ti -1c
.RI "record \fBErrorDecl\fP (int line, string? Message)"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for Ship Processor from the source code\&.
